// Generated by CoffeeScript 1.6.3
self.onmessage = function(event) {
  var dx, dy, getPixel, height_end, imagedata_result, imagedata_work, lastprogress, num_pixels, number, pixeldata, progress, radius, scale, setPixel, sum_a, sum_b, sum_g, sum_r, width, x, y;
  getPixel = function(x, y) {
    var index;
    if (x < 0) {
      x = 0;
    }
    if (y < 0) {
      y = 0;
    }
    if (x >= width) {
      x = width - 1;
    }
    if (y >= height_end) {
      y = height_end - 1;
    }
    index = (y * width + x) * 4;
    return [imagedata_work.data[index + 0], imagedata_work.data[index + 1], imagedata_work.data[index + 2], imagedata_work.data[index + 3]];
  };
  setPixel = function(x, y, r, g, b, a) {
    var index;
    y = y - radius;
    index = (y * width + x) * 4;
    imagedata_result.data[index + 0] = r;
    imagedata_result.data[index + 1] = g;
    imagedata_result.data[index + 2] = b;
    imagedata_result.data[index + 3] = a;
  };
  imagedata_work = event.data.imagedata_work;
  imagedata_result = event.data.imagedata_result;
  width = event.data.width;
  height_end = event.data.height_end;
  radius = event.data.radius;
  number = event.data.number;
  sum_r = void 0;
  sum_g = void 0;
  sum_b = void 0;
  sum_a = void 0;
  scale = (radius * 2 + 1) * (radius * 2 + 1);
  num_pixels = width * (height_end - radius);
  lastprogress = 0;
  y = radius - 1;
  while (y < height_end - radius) {
    x = 0;
    while (x < width) {
      progress = Math.round(((((y + 1) * width) + height_end - radius) / num_pixels) * 100);
      if (progress > lastprogress) {
        lastprogress = progress;
        postMessage({
          status: "progress",
          progress: progress,
          number: number
        });
      }
      sum_r = 0;
      sum_g = 0;
      sum_b = 0;
      sum_a = 0;
      dy = -radius;
      while (dy <= radius) {
        dx = -radius;
        while (dx <= radius) {
          pixeldata = getPixel(x + dx, y + dy);
          sum_r += pixeldata[0];
          sum_g += pixeldata[1];
          sum_b += pixeldata[2];
          sum_a += pixeldata[3];
          dx++;
        }
        dy++;
      }
      setPixel(x, y, Math.round(sum_r / scale), Math.round(sum_g / scale), Math.round(sum_b / scale), Math.round(sum_a / scale));
      x++;
    }
    y++;
  }
  postMessage({
    status: "complite",
    imagedata: imagedata_result,
    number: number
  });
  self.close();
};
